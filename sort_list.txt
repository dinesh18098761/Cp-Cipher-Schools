class Solution {
    public ListNode merge(ListNode left,ListNode right){
        ListNode head = new ListNode(0);
        ListNode curr = head;
        
        while(left != null && right != null){
            if(left.val <= right.val){
                curr.next = left;
                left = left.next;
            }else{
                curr.next = right;
                right = right.next;
            }
            curr = curr.next;
        }
        
        if(left != null)
            curr.next = left;
        else if(right != null)
            curr.next = right;
        
        return head.next;
    }
    public ListNode sortList(ListNode head) {
        if(head == null || head.next == null)return head;
        
        ListNode slow = head;
        ListNode fast = head;
        
        while(fast.next != null && fast.next.next != null){
            slow = slow.next;
            fast = fast.next.next;
        }
        
        fast = slow.next;
        slow.next = null;
        
        return merge(sortList(head),sortList(fast));
    }
}