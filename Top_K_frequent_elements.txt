class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        Map<Integer,Integer> map=new HashMap<Integer,Integer>();
        int[] arr=new int[k];
        for(int i=0;i<nums.length;i++)
        {
            if(!map.containsKey(nums[i]))
            {
                map.put(nums[i],1);
            }
            else
            {
                map.put(nums[i],map.get(nums[i])+1);
            }
        }
        PriorityQueue<Integer> p1=new PriorityQueue<Integer>((a,b)->(map.get(a)-map.get(b)));
        for(int i:map.keySet())
        {
            p1.add(i);
            if(p1.size()>k)
            {
                p1.remove();
            }
        }
        while(k-->0)
        {
            arr[k]=p1.remove();
        }
        return arr;
    }
}